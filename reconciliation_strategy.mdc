# NHL Data Reconciliation Strategy
## Overview

This document outlines the comprehensive strategy for reconciling data across multiple sources in the NHL dataset. Reconciliation ensures data consistency, identifies discrepancies, and establishes reliable relationships between different data files and statistics.

## Data Source Relationships

### Primary Data Flow
```
JSON Sources (Clean) → HTML Reports (Validation) → CSV Outputs (Curated)
     ↓                        ↓                        ↓
teams.json              Game Summaries           Curated Datasets
games.json              Event Summaries          Quality Reports
boxscores/              Play-by-Play             Reconciliation Logs
playbyplay/             Time on Ice
```

### Cross-Source Dependencies
- **teams.json** ↔ **games.json**: Team identifiers and metadata
- **games.json** ↔ **boxscores/**: Game results and statistics
- **boxscores/** ↔ **playbyplay/**: Event-level validation
- **HTML Reports** ↔ **JSON Data**: Cross-validation and enrichment

## Reconciliation Objectives

### 1. Data Consistency
- **Identifier Resolution**: Ensure consistent team and player IDs across sources
- **Value Alignment**: Verify statistical values match between sources
- **Format Standardization**: Normalize data formats and units

### 2. Quality Assurance
- **Completeness Validation**: Ensure all expected data is present
- **Accuracy Verification**: Cross-check critical statistics
- **Logical Consistency**: Validate business rules and relationships

### 3. Relationship Mapping
- **Entity Relationships**: Establish clear links between entities
- **Hierarchical Structure**: Organize data by season → team → game → player → event
- **Temporal Relationships**: Link events across time periods

## Reconciliation Workflow

### Phase 1: Source Assessment
1. **Data Inventory**
   - Catalog all available data sources
   - Document data structures and schemas
   - Identify key identifiers and relationships

2. **Quality Baseline**
   - Assess data completeness by source
   - Identify known data quality issues
   - Establish quality metrics and thresholds

3. **Relationship Mapping**
   - Map entity relationships across sources
   - Identify foreign key relationships
   - Document data dependencies

### Phase 2: Identifier Resolution
1. **Team Identifier Reconciliation**
   - **Source**: teams.json, games.json, boxscores, HTML reports
   - **Challenge**: Different ID formats (numeric vs. abbreviation)
   - **Solution**: Create comprehensive team lookup table
   - **Validation**: Cross-reference team names and abbreviations

2. **Player Identifier Reconciliation**
   - **Source**: boxscores, playbyplay, HTML reports
   - **Challenge**: Player name variations and ID consistency
   - **Solution**: Establish player master record
   - **Validation**: Cross-reference player names and statistics

3. **Game Identifier Reconciliation**
   - **Source**: games.json, boxscores, HTML reports
   - **Challenge**: Game ID formats and season associations
   - **Solution**: Standardize game ID format
   - **Validation**: Verify game metadata consistency

### Phase 3: Statistical Validation
1. **Core Statistics Cross-Validation**
   - **Goals**: Compare between games.json, boxscores, and HTML reports
   - **Shots**: Validate SOG between boxscores and game summaries
   - **Penalties**: Cross-check PIM between sources
   - **Time on Ice**: Verify between boxscores and time-on-ice reports

### Penalty Data Reconciliation
**Primary Source (enumeration/timing)**: Gamecenter Landing JSON
**Primary Source (complex details)**: HTML GS (Game Summary) HTM
**Secondary Sources**: Boxscore PIM data, HTML PL/ES reports, Play-by-Play JSON

**Data Structure Analysis (2024-2025 Season)**:
- **Gamecenter Landing**: High reliability for counts/timing; authoritative enumeration
- **GS HTM (Primary for complexity)**: Consolidates team penalties (served by), coincidentals, double minors, majors/misconducts and their grouping
- **PL/ES HTM**: Detailed event lines to support GS; used for tie-breakers and enrichment
- **Boxscore PIM**: Player-level minutes for reconciliation of totals
- **Play-by-Play JSON**: Event/situation codes to validate PP relevance and coincidental logic

**Penalty Types Identified**:
- **Minor Penalties (2 min)**: tripping, hooking, roughing, high-sticking, slashing, cross-checking, interference, holding
- **Major Penalties (5 min)**: fighting
- **Misconduct Penalties (10 min)**: misconduct, unsportsmanlike-conduct
- **Special Penalties**: high-sticking-double-minor, ps-slash-on-breakaway, too-many-men-on-the-ice

**Complex Penalty Scenarios Identified**:
- **Simultaneous Penalties**: Multiple penalties at same time (11 occurrences in sample)
- **Team Penalties**: Bench penalties with `servedBy` field (3 occurrences in sample)
- **Non-Power Play Penalties**: Fighting, misconducts, team penalties (24 total in sample)

**Reconciliation Strategy**:
1. **Use Gamecenter Landing for enumeration/timing** of penalty events
2. **Use GS HTM as primary source for complex details** (served-by, coincidentals, double minors, majors/misconducts)
3. **Cross-Validate with Boxscore PIM** totals at player level (include served-by minutes)
4. **Use PL/ES & PBP JSON** to confirm classification and PP relevance via situation codes
5. **Automated Validation**: Detect count mismatches and PIM discrepancies; flag non-PP penalties

**Key Reconciliation Rules for 100% Accuracy**:
1. **Simultaneous Penalties Rule**: When both teams receive penalties at the same time, result is even strength (4-on-4), not a power play
2. **Team Penalty Rule**: Bench penalties must be linked to serving player via `servedBy` field for accurate PIM tracking
3. **Power Play Calculation Rule**: Only minor penalties result in power plays; majors, misconducts, and fighting do not
4. **Situation Code Rule**: 1451 = power play, 1551 = even strength
5. **Penalty Type Classification**: MIN (minor), MAJ (major), BEN (bench), MIS (misconduct), MAT (match)
 6. **Double Minor Handling**: GS grouping determines two sequential minors at same timestamp; PP impact based on goal occurrence between minors

**Common Discrepancies Found**:
- **Count Mismatch**: 13/15 games show penalty count differences between sources
- **Player Name Variations**: Inconsistent player name formatting across sources
- **HTML Parsing Challenges**: Prioritize GS HTM extraction; use PL/ES only for gaps

2. **Derived Statistics Validation**
   - **Team Totals**: Sum individual player stats vs. team totals
   - **Game Totals**: Aggregate event data vs. game summaries
   - **Season Totals**: Sum game data vs. season statistics

3. **Logical Consistency Checks**
   - **Score Validation**: Home + Away goals = Total goals
   - **Time Validation**: Period times sum to total game time
   - **Player Validation**: Players listed in roster appear in statistics

### Phase 4: Discrepancy Resolution
1. **Discrepancy Identification**
   - **Automated Checks**: Programmatic comparison of values
   - **Manual Review**: Human verification of critical statistics
   - **Pattern Analysis**: Identify systematic data quality issues

2. **Resolution Strategies**
   - **Source Priority**: Establish hierarchy of data source reliability
   - **Correction Methods**: Document how to handle discrepancies
   - **Quality Flags**: Mark data with confidence indicators

3. **Documentation and Tracking**
   - **Reconciliation Logs**: Record all discrepancies and resolutions
   - **Quality Reports**: Generate summary of data quality
   - **Update Procedures**: Document ongoing reconciliation processes

## Key Reconciliation Points

### Game-Level Reconciliation
```
games.json (Schedule) ↔ boxscores/ (Results) ↔ HTML Reports (Details)
     ↓                        ↓                        ↓
Game Metadata           Game Statistics         Game Summary
Team Information        Player Performance      Event Details
Venue/Time Data         Final Score            Time on Ice
Game State              Period Information     Shift Data
```

**Validation Rules:**
- Game IDs must match across all sources
- Final scores must be consistent
- Team identifiers must resolve correctly
- Game dates and times must align
- Period information must be consistent (regular vs. overtime)
- Game state must be "OFF" (completed games only)

### Player-Level Reconciliation
```
boxscores/ (Game Stats) ↔ playbyplay/ (Events) ↔ HTML Reports (Details)
     ↓                        ↓                        ↓
Player Performance       Player Events           Player Summary
Game Statistics          Shift Data             Time on Ice
Season Totals            Event Details          Advanced Stats
```

**Validation Rules:**
- Player IDs must be consistent across sources
- Game statistics must sum to season totals
- Time on ice must be logically consistent (MM:SS format)
- Performance metrics must align with events
- Position-specific stats must be appropriate (faceoffs for centers, saves for goalies)
- Goals + Assists = Points validation

### Team-Level Reconciliation
```
teams.json (Metadata) ↔ games.json (Schedule) ↔ boxscores/ (Performance)
     ↓                        ↓                        ↓
Team Information         Team Schedule           Team Performance
Conference/Division      Home/Away Games         Season Statistics
Venue Information        Game Results            Player Rosters
```

**Validation Rules:**
- Team identifiers must resolve correctly
- Conference/division assignments must be consistent
- Home/away designations must be logical
- Roster information must align with game participation

## Data Quality Indicators

### Completeness Metrics
- **Coverage Percentage**: % of expected data present
- **Missing Data Patterns**: Identify systematic gaps
- **Source Completeness**: Compare completeness across sources

### Accuracy Metrics
- **Cross-Source Agreement**: % of values that match between sources
- **Validation Pass Rate**: % of records passing business rules
- **Error Detection Rate**: % of known errors identified

### Consistency Metrics
- **Format Consistency**: % of data in expected format
- **Naming Consistency**: % of entities with consistent names
- **Relationship Consistency**: % of relationships properly established

### Penalty Data Quality Metrics
- **Penalty Count Consistency**: % of games with matching penalty counts across sources
- **Player PIM Validation**: % of players with matching penalty minutes between sources
- **Penalty Type Coverage**: % of penalty types successfully categorized
- **Timing Accuracy**: % of penalties with consistent timing across sources
- **Player Name Resolution**: % of penalty players successfully identified across sources

## Reconciliation Tools and Methods

### Automated Reconciliation
1. **Programmatic Validation**
   - Script-based cross-source comparison
   - Automated business rule validation
   - Statistical outlier detection

2. **Data Quality Monitoring**
   - Real-time quality assessment
   - Automated alerting for issues
   - Quality trend analysis

3. **Batch Processing**
   - Scheduled reconciliation runs
   - Bulk data validation
   - Automated correction application

### Manual Reconciliation
1. **Expert Review**
   - Human verification of critical data
   - Complex relationship validation
   - Business rule interpretation

2. **Discrepancy Investigation**
   - Root cause analysis of issues
   - Source system investigation
   - Correction strategy development

3. **Quality Assurance**
   - Final data validation
   - User acceptance testing
   - Documentation review

### Penalty Data Reconciliation Workflow
**Step 1: Data Extraction and Validation**
- Extract penalty enumeration/timing from Gamecenter Landing JSON
- Extract complex penalty details from GS HTM (served-by, coincidentals, double minors)
- Validate structure (period, time, team, player, minutes, type, description)
- Cross-reference with Boxscore PIM for player totals (include served-by)

**Step 2: Discrepancy Detection**
- Compare penalty counts between Gamecenter Landing and HTML sources
- Validate penalty minutes per player against Boxscore PIM totals
- Identify missing or inconsistent penalty data

**Step 3: Data Enrichment**
- Extract additional context from HTML Play-by-Play reports
- Standardize player names across all sources
- Link penalty events with corresponding game events

**Step 4: Quality Assurance**
- Verify penalty timing consistency with game flow
- Validate team penalty totals against individual player penalties
- Ensure penalty descriptions match official NHL penalty codes

**Step 5: Output Generation**
- Curated GS JSON written to `storage/{season}/json/curate/gs/gs_{gameId}.json`
- Penalty-specific reconciliation is deferred to a later step using GS + Gamecenter Landing + Boxscore PIM
- Generate discrepancy reports during reconciliation stage, not during curation

## Reconciliation Outputs

### Curated Datasets
- **Clean Data**: Reconciled and validated datasets
- **Quality Flags**: Indicators of data confidence
- **Correction Logs**: Records of all changes made

### Quality Reports
- **Reconciliation Summary**: Overview of reconciliation results
- **Discrepancy Reports**: Detailed listing of issues found
- **Quality Metrics**: Quantitative quality indicators

### Documentation
- **Reconciliation Procedures**: Step-by-step reconciliation process
- **Data Lineage**: Trace data from source to final output
- **Quality Standards**: Documentation of quality requirements

## Implementation Strategy

### Phase 1: Foundation (Weeks 1-2)
1. **Setup Infrastructure**
   - Establish reconciliation environment
   - Create data quality monitoring tools
   - Develop automated validation scripts

2. **Initial Assessment**
   - Complete data inventory
   - Establish quality baseline
   - Identify critical reconciliation points

### Phase 2: Core Reconciliation (Weeks 3-6)
1. **Identifier Resolution**
   - Resolve team and player identifiers
   - Establish entity relationships
   - Create master reference tables

2. **Statistical Validation**
   - Cross-validate core statistics
   - Implement business rule validation
   - Document discrepancy patterns

3. **Penalty Data Reconciliation**
   - Implement Gamecenter Landing penalty extraction
   - Develop Boxscore PIM validation system
   - Create penalty discrepancy detection algorithms
   - Establish penalty data quality monitoring

### Phase 3: Advanced Reconciliation (Weeks 7-10)
1. **Complex Relationships**
   - Validate derived statistics
   - Cross-check advanced metrics
   - Implement temporal validation

2. **Quality Optimization**
   - Refine reconciliation procedures
   - Optimize validation performance
   - Enhance error detection

### Phase 4: Maintenance (Ongoing)
1. **Continuous Monitoring**
   - Implement ongoing quality checks
   - Monitor for new data quality issues
   - Update reconciliation procedures

2. **Process Improvement**
   - Refine reconciliation methods
   - Optimize performance
   - Enhance automation

## Success Criteria

### Quality Metrics
- **Completeness**: >95% data coverage across all sources
- **Accuracy**: >99% cross-source agreement for core statistics
- **Consistency**: >98% format and naming consistency

### Performance Metrics
- **Processing Time**: <2 hours for full season reconciliation
- **Error Detection**: >90% of data quality issues identified
- **Resolution Rate**: >95% of discrepancies resolved

### Operational Metrics
- **Automation Level**: >80% of reconciliation automated
- **Documentation Quality**: Comprehensive and up-to-date
- **User Satisfaction**: High confidence in data quality

## Risk Mitigation

### Data Quality Risks
- **Missing Data**: Implement fallback strategies and data imputation
- **Inconsistent Formats**: Establish robust parsing and normalization
- **Validation Errors**: Document and handle exceptions gracefully

### Technical Risks
- **Processing Failures**: Implement error recovery and retry mechanisms
- **Performance Issues**: Monitor and optimize reconciliation performance
- **Storage Limitations**: Plan for data growth and archiving

### Operational Risks
- **Resource Constraints**: Prioritize critical reconciliation tasks
- **Timeline Pressures**: Implement incremental reconciliation approach
- **Quality Trade-offs**: Balance speed vs. accuracy requirements

## Next Steps

### Immediate Actions
1. **Begin Source Assessment**
   - Complete data inventory
   - Document data structures
   - Identify reconciliation priorities

2. **Establish Infrastructure**
   - Set up reconciliation environment
   - Create validation tools
   - Develop monitoring systems

### Short-term Goals
1. **Complete Phase 1 Implementation**
   - Resolve identifier issues
   - Establish basic validation
   - Create quality baseline

2. **Validate Core Statistics**
   - Cross-validate game results
   - Verify player statistics
   - Check team information

### Long-term Vision
1. **Full Data Integration**
   - Complete reconciliation across all sources
   - Establish automated quality monitoring
   - Implement continuous improvement

2. **Advanced Analytics**
   - Leverage reconciled data for insights
   - Develop predictive models
   - Create comprehensive reporting
description:
globs:
alwaysApply: true
---
